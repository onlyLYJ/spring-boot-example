<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jc.mapper.MeetingroomBookDetailMapper">
    <resultMap id="BaseResultMap" type="com.jc.model.MeetingroomBookDetail">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="employee_id" property="employeeId" jdbcType="INTEGER"/>
        <result column="meetingroom_id" property="meetingroomId" jdbcType="INTEGER"/>
        <result column="meeting_begin_time" property="meetingBeginTime" jdbcType="TIMESTAMP"/>
        <result column="meeting_end_time" property="meetingEndTime" jdbcType="TIMESTAMP"/>
        <result column="book_reason" property="bookReason" jdbcType="VARCHAR"/>
        <result column="attend_num" property="attendNum" jdbcType="INTEGER"/>
        <result column="audit_status" property="auditStatus" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        id, employee_id, meetingroom_id, meeting_begin_time, meeting_end_time, book_reason,
        attend_num, audit_status, remark, create_time, update_time, status
    </sql>

    <sql id="Base_Column_List_WithoutId">
        employee_id, meetingroom_id, meeting_begin_time, meeting_end_time, book_reason,
        attend_num, audit_status, remark, create_time, update_time, status
    </sql>

    <sql id="VO_Column_List_WithoutId">
        #{employeeId}, #{meetingroomId}, #{meetingBeginTime}, #{meetingEndTime}, #{bookReason},
        #{attendNum}, #{auditStatus}, #{remark}, #{createTime}, #{updateTime}, #{status}
    </sql>

    <sql id="Base_Column_List_WithoutIdAndCreateTime">
        employee_id, meetingroom_id, meeting_begin_time, meeting_end_time, book_reason,
        attend_num, audit_status, remark, update_time, status
    </sql>

    <sql id="VO_Column_List_WithoutIdAndCreateTime">
        #{employeeId}, #{meetingroomId}, #{meetingBeginTime}, #{meetingEndTime}, #{bookReason},
        #{attendNum}, #{auditStatus}, #{remark}, #{updateTime}, #{status}
    </sql>

    <sql id="SELECT_BOOK_DETAIL">
        SELECT
            mbd.id,
            m.roomname,
            e.real_name            realName,
            mbd.status,
            mbd.audit_status       auditStatus,
            mbd.meeting_begin_time meetingBeginTime,
            mbd.meeting_end_time   meetingEndTime,
            mbd.book_reason        bookReason,
            mbd.attend_num         attendNum,
            mbd.remark
        FROM meetingroom_book_detail mbd
            LEFT JOIN employee e ON mbd.employee_id = e.id
            LEFT JOIN meetingroom m ON mbd.meetingroom_id = m.id
    </sql>

    <sql id="UPDATE_BOOK_DETAIL">
        SELECT
            mbd.id,
            m.id                   meetingroomId,
            mbd.meeting_begin_time meetingBeginTime,
            mbd.meeting_end_time   meetingEndTime,
            mbd.book_reason        bookReason,
            mbd.attend_num         attendNum,
            mbd.remark
        FROM meetingroom_book_detail mbd
            LEFT JOIN employee e ON mbd.employee_id = e.id
            LEFT JOIN meetingroom m ON mbd.meetingroom_id = m.id
    </sql>


    <select id="listValidMeetingroomBookDetail" resultType="com.jc.model.MeetingroomBookDetail">
        <include refid="SELECT_BOOK_DETAIL"/>
        <![CDATA[ WHERE mbd.status = '0' AND mbd.meeting_begin_time > now()
        ]]>
    </select>

    <select id="selectMeetingroomBookDetailById" resultType="com.jc.vo.MeetingroomBookDetailVO">
        <include refid="SELECT_BOOK_DETAIL"/>
        WHERE mbd.id = #{id}
    </select>

    <!--
        查询 未过期+同一个会议室+时间冲突的 预定会议
        未通过审核的会议暂时也视为冲突
    -->
    <select id="getBookListWithinDatetimeRange" resultType="com.jc.vo.MeetingroomBookDetailVO">
        SELECT
        mbd.id,
        m.roomname,
        e.real_name realName,
        mbd.meeting_begin_time meetingBeginTime,
        mbd.meeting_end_time meetingEndTime,
        mbd.book_reason bookReason,
        mbd.remark
        FROM meetingroom_book_detail mbd
        LEFT JOIN employee e ON mbd.employee_id = e.id
        LEFT JOIN meetingroom m ON mbd.meetingroom_id = m.id
        <![CDATA[ WHERE mbd.meetingroom_id = #{meetingroomId} AND mbd.status = '0' AND ((#{meetingBeginTime} between mbd.meeting_begin_time AND mbd.meeting_end_time) OR
(#{meetingEndTime} between mbd.meeting_begin_time AND mbd.meeting_end_time))]]>
        <if test="inputId != null and inputId gt 0">
            AND #{inputId} != mbd.id
        </if>
    </select>

    <!--更新审核结果-->
    <update id="updateAuditStatusById">
        UPDATE meetingroom_book_detail
        SET audit_status = #{auditStatus}, update_time = now()
        WHERE id = #{id}
    </update>

    <!--通过id取消预定-->
    <update id="cancelMeetingroomBookDetailById" parameterType="java.lang.Integer">

        UPDATE meetingroom_book_detail
        SET status = '1', update_time = now()
        WHERE id = #{0}
    </update>

    <!--通过会议室id取消预定-->
    <update id="cancelMeetingroomBookDetailByMeetingroomId" parameterType="java.lang.Integer">

        UPDATE meetingroom_book_detail
        SET status = '1', update_time = now()
        WHERE meetingroom_id = #{0}
    </update>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into meetingroom_book_detail (<include refid="Base_Column_List_WithoutId"/>)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.employeeId,jdbcType=INTEGER}, #{item.meetingroomId,jdbcType=INTEGER},
            #{item.meetingBeginTime,jdbcType=TIMESTAMP}, #{item.meetingEndTime,jdbcType=TIMESTAMP},
            #{item.bookReason,jdbcType=VARCHAR},#{item.attendNum,jdbcType=INTEGER},
            #{item.auditStatus,jdbcType=VARCHAR},#{item.remark,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},#{item.updateTime,jdbcType=TIMESTAMP},
            #{item.status,jdbcType=VARCHAR})
        </foreach>
    </insert>


</mapper>